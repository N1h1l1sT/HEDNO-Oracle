<Language:English; Version 1.0>
Instead of Training the model, a previously saved model is loaded.{0}Using an existing model is faster, but beware that if the data changes significantly (in particular, if the Factor Level Order changes), then the whole procedure will fail!{0}In that case, please just uncheck this CheckBox to create the model anew.
Uses the trained model to make prediction upon the Testing Dataset.
Saves the trained model at the location specified below
If 'Save Model' is checked, the model is saved in an RDS format in this path
View a Data Summary of the Classification dataset, such as Min, Max, Mean, etc.
View Variable Information such as their types and descriptions.
Selects all options in the GroupBox
[Transparent background means a new Model will be trained, so it can be either in Statistics Mode or not]{0}{0}[If the CheckBox is Checked:]{0}[Red background means that the existing Training/Testing XDF files are not marked for statistics, hence by checking this, the statistics will be nonsense or fail altogether]{0}[Green background means that the existing Training/Testing XDF files are marked for statistics]{0}{0}[If the CheckBox is Not Checked:]{0}[Red background means that the existing Training/Testing XDF files are marked for statistics, hence by not checking it, you strip yourself from the option to perform statistics]{0}[Green background means that the existing XDF is not marked for statistics]
A form is generated with the Model's statistics, such as the Confusion Matrix, Accuracy, F Measure, G, etc.
A Plot of the model's ROC Curve is shown along with the calculated AUC
Because R.NET does not support multiple Graph Plots simultaneously, when predictions from multiple models are applied, the ROC Curve plots are saved as .png files.{0}If this option is checked, the containing folder is opened when the procedure comes to an end.
The decimal point that viewed statistics are rounded at.
Selects all the variables to be used in the Supervised Learning
Type an n-grams to perform with the variables.{0}If, for instance, variables '1', '2', and '3' are selected above, then{0}*a 1-gram will produce 3 results (1, 2, 3){0}*a 2-gram will produce 3 results (1-2, 1-3, 2-3){0}*whilst a 3-gram will produce 1 result (1-2-3)
Instead of Training only 1 model with selected columns above, use n-grams to produce multiple combinations for them (according to n-gram's n set above) and train multiple models, 1 for each combination
If selected, then not only will combination iterate over selected columns, but also for n = 1 to n-gram's n.{0}If, for instance, 3 columns are selected and n-gram is set to 3, then 7 results will be produced:{0}1,{0}2,{0}3,{0}1-2,{0}1-3,{0}2-3{0}1-2-3
Trains a Neural Networks model using R's rxNeuralNet algorithm and according to the Algorithm-Specific Options selected, or loads an existing model if 'Use Existing Model' is checked{0}*If 'Make Predictions' is selected, it makes prediction on the Testing File{0}*If 'Save Model' is checked, it saves the trained model in a file using R's RDS format which can then be used to import the trained model into this programme or to an R client{0}*If 'Show Data Summary' is checked, you can view a Data Summary of the Classification dataset, such as Min, Max, Mean, etc.{0}*If 'Show Variable Information' is checked, you can view Variable Information such as their types and descriptions.{0}{0}If the dataset is created using Statistics Mode (i.e. n% of labelled data for Training and 100-n% for Testing:{0}--If 'Show Statistics' is checked, you can view Model's statistics, such as Confusion Matrix, Accuracy, F Measure, G, etc.{0}{0}--If 'Show ROC Curve' is checked, the model's ROC Curve with AUC value is plotted{0}Otherwise{0}--The predictions are exported into a .csv containing: 1) Their respective SQL Server project ID, 2) Their Probability of being approved, 3) Their Class (0/1)
The Variables/Columns that can be used for the Training Process
Handles the way Algorithm Progress is reported and it's default value is to retrieve the value set to the R Server itself.{0}Takes Integer values with{0}0 meaning no progress is reported.{0}1 meaning the number of processed rows is printed and updated.{0}2 meaning rows processed and timings are reported.{0}3 meaning rows processed and all timings are reported.
The number of blocks to read for each chunk of data read from the XDF file. The default behaviour is to retrieve back the value from the R Server, which is the recommended value.
Name of a logical variable in the data set (in quotes) or a logical expression using variables in the data set to specify row selection.{0}For example, rowSelection = "old" will use only observations in which the value of the variable old is TRUE. rowSelection = (cost > 20 & cost < 65) will use only observations in which the value of the cost variable is between 20 and 65.{0}The row selection is performed after processing any data transformations
The default number of hidden nodes in the neural net.
The number of iterations on the full training set.
Specifies the type of hardware acceleration to use. Possible values are "sse" and "gpu".{0}{0}For GPU acceleration, it is recommended to use a miniBatchSize greater than one. If you want to use the GPU acceleration, there are additional manual setup steps are required:{0}Download and install NVidia CUDA Toolkit 6.5 (https://developer.nvidia.com/cuda-toolkit-65).{0}Download and install NVidia cuDNN v2 Library (https://developer.nvidia.com/rdp/cudnn-archive).{0}Find the libs directory of the MicrosoftRML package by calling system.file("mxLibs/x64", package = "MicrosoftML").{0}Copy cublas64_65.dll, cudart64_65.dll and cusparse64_65.dll from the CUDA Toolkit 6.5 into the libs directory of the MicrosoftML package.{0}Copy cudnn64_65.dll from the cuDNN v2 Library into the libs directory of the MicrosoftML package.
Specifies the type of automatic normalisation used:{0}--"auto": if normalisation is needed, it is automatically performed. This is the default value.{0}--"no": no normalisation is performed.{0}--"yes": normalisation is performed.{0}--"warn": if normalisation is needed, a warning message is displayed, but normalisation is not performed.{0}{0}normalisation rescales disparate data ranges to a standard scale.{0}Feature scaling insures the distances between data points are proportional and enables various optimisation methods such as gradient descent to converge much faster.{0}If normalisation is performed, a MaxMin normaliser is used.{0}It normalizes values in an interval [a, b] where -1 <= a <= 0 and 0 <= b <= 1 and b - a = 1.{0}This normaliser preserves sparsity by mapping zero to zero.
Sets the mini-batch size. Recommended values are between 1 and 256.{0}This parameter is only used when the acceleration is GPU.{0}Setting this parameter to a higher value improves the speed of training, but it might negatively affect the accuracy.