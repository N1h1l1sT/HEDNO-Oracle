<Language:English;Version custom>
Via the Settings Form one may customise the application to one's needs
Closes the programme
This form allows one to make changes to the database
Push this if you want to give feedback on the programme, or if you want to make a complaint
Opens the Settings File (directly) for editing
Navigates to the Programme's Folder inside "My Documents"
Navigates to the Programme's directory
Navigates to the Database's directory
Navigates to the Extra's directory
Navigates to the Languages' directory
Navigates to the Settings' directory
Navigates to the Skins' directory
Launches the default browser and navigates the Programme's Website
Launches the default browser and navigates the Programmer's Website
Launches the default browser and navigates the Company's Website
Show the Presentation Form wherein lie tips and insight into how to use the programme
Show the "Welcome Screen" that was shown the first time you run the programme.
View the End User's License Agreement
View the Changelog to see what changes were done by each new version
This form holds all the available commands as well as tips and explanations on how to use the programme
Checks to see if there are any updates available, and if so prompts you to download it
View the programme's Credits
View programme related information





Parses the command you typed and executes it (alerting you if the command you typed is invalid)




















Needs: An active connection to the SQL Server and Main SQL Table{0}Does: If they don't already exist, it creates the 2 SQL Columns needed for the process on the Main SQL Table (not the view!)
Opens the 'Create SQL View' form so that you may create, modify or delete needed SQL Views
Needs: An active connection to the SQL Server, the 'Final Dataset' SQL View, the Geolocation Columns and a Valid Google Geolocation API Key.{0}Does: Iterates over every project in the 'Final Dataset' SQL View and Geo-Locates them.
Needs: An active connection to the SQL Server, the 'Final Dataset' SQL View and the Geolocation Columns.{0}Does: Shows a message box giving you information on:{0}1) Total Project Rows{0}2) Number of projects which have successfully been Geo-located{0}3) Number of projects which Geo-Location has not been executed yet{0}4) Number of projects which Geo-Location failed{0}5) Number of Addressed that said failed projects are comprised of
Needs: An active connection to the SQL Server, the 'Final Dataset' SQL View and the Geolocation Columns.{0}Does: Creates and opens a .csv containing in alphabetic order all the addresses/cities which Google's Geo-Location failed to Geolocate.{0}*One can then fill in a google-maps recognisable name for the address/city save it as 'Cities.csv' in the 'Extras' directory.{0}*The programme will then be able to Geolocate those previously failed projects as well.
When the Geolocation service fails to geo-locate a project, its Longitude and Latitude are marked as -1 to be ignored afterwards.{0}However, if you've exported and configured the list of Problematic Addresses, you need to reset the Invalid Geolocation Entries so that the programme tries to geolocate them anew
Opens the PreProcessing form where you may:{0}*Apply the pre-processing procedure to the dataset, creating an XDF output file.{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}*View the Geo-Location Graph as of Pre-Processing's point of view (may contain erroneous latitudes/longitudes outside Greece's region)
Opens the ClusteringStep0 form where you may:{0}*Create the Clustering dataset containing only projects with Longitudes/Latitudes inside Greece's region, outputting it into an XDF file.{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}*View the Geo-Location Graph as of Clustering Step 0's point of view (no clusters or colour-coding as of yet)
Opens the ClusteringStep1 form where you may:{0}*Apply Clustering to the Clustering dataset, outputting it into an XDF file.{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}*View the Geo-Location Graph as of Clustering Step 1's point of view (Clear Clusters with colour-coding)
Opens the Classification form where you may:{0}*Create the Classification dataset in one of 2 ways:{0}--With a n% of data marked for Training and 100-n% percent for Testing purposes.{0}--With all projects with a clear label (Approved/Cancelled) for training, and all those who have not for Testing/Classification{0}*Form the Training XDF file{0}*Form the Testing XDF file{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}*View a Data Summary of the Training Dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}*View a Data Summary of the Testing Dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.
Opens the LogisticRegression form where you may:{0}*Train a Logistic Regression model using R's rxLogit algorithm{0}*Make prediction on the Testing File{0}*Save the trained model in a file using R's RDS format which can then be used to import the trained model into this programme or to an R client{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}{0}[Enable/Disable Statistics Mode]{0}If the dataset is created using Statistics Mode (i.e. n% of labelled data for Training and 100-n% for Testing:{0}--View Model's statistics, such as Confusion Matrix, Accuracy, F Measure, G, etc.{0}--Show model's ROC Curve with AUC calculated value{0}Otherwise{0}--Exports the predictions of unlabelled projects into a .csv containing: 1) Their respective SQL Server project ID, 2) Their Probability of being approved, 3) Their Class (0/1){0}{0}*Ability to tweak Algorithm-Specific Options, such as: covCoef
Opens the DecisionTrees form where you may:{0}*Train a Decision Tree model using R's rxDTree algorithm{0}*Make prediction on the Testing File{0}*Save the trained model in a file using R's RDS format which can then be used to import the trained model into this programme or to an R client{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}{0}[Enable/Disable Statistics Mode]{0}If the dataset is created using Statistics Mode (i.e. n% of labelled data for Training and 100-n% for Testing:{0}--View Model's statistics, such as Confusion Matrix, Accuracy, F Measure, G, etc.{0}--Show model's ROC Curve with AUC calculated value{0}Otherwise{0}--Exports the predictions of unlabelled projects into a .csv containing: 1) Their respective SQL Server project ID, 2) Their Probability of being approved, 3) Their Class (0/1){0}*Ability to tweak Algorithm-Specific Options, such as: Plot Tree Model, Classification Method, Show Complexity Plot, cp
Opens the NaiveBayes form where you may:{0}*Train a Naive Bayes model using R's rxNaiveBayes algorithm{0}*Make prediction on the Testing File{0}*Save the trained model in a file using R's RDS format which can then be used to import the trained model into this programme or to an R client{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}{0}[Enable/Disable Statistics Mode]{0}If the dataset is created using Statistics Mode (i.e. n% of labelled data for Training and 100-n% for Testing:{0}--View Model's statistics, such as Confusion Matrix, Accuracy, F Measure, G, etc.{0}--Show model's ROC Curve with AUC calculated value{0}Otherwise{0}--Exports the predictions of unlabelled projects into a .csv containing: 1) Their respective SQL Server project ID, 2) Their Probability of being approved, 3) Their Class (0/1)
Opens the RandomForest form where you may:{0}*Train a Random Forest model using R's rxDForest algorithm{0}*Make prediction on the Testing File{0}*Save the trained model in a file using R's RDS format which can then be used to import the trained model into this programme or to an R client{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}{0}[Enable/Disable Statistics Mode]{0}If the dataset is created using Statistics Mode (i.e. n% of labelled data for Training and 100-n% for Testing:{0}--View Model's statistics, such as Confusion Matrix, Accuracy, F Measure, G, etc.{0}--Show model's ROC Curve with AUC calculated value{0}Otherwise{0}--Exports the predictions of unlabelled projects into a .csv containing: 1) Their respective SQL Server project ID, 2) Their Probability of being approved, 3) Their Class (0/1){0}{0}*Ability to tweak Algorithm-Specific Options, such as: Plot Variables Importance, Classification Method, Out-of-bags Error VS nTree Plot, cp, nTree, mTry, MaxDepth
Opens the StochasticGradientBoosting form where you may:{0}*Train a Stochastic Gradient Boosting model using R's rxBTrees algorithm{0}*Make prediction on the Testing File{0}*Save the trained model in a file using R's RDS format which can then be used to import the trained model into this programme or to an R client{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}{0}[Enable/Disable Statistics Mode]{0}If the dataset is created using Statistics Mode (i.e. n% of labelled data for Training and 100-n% for Testing:{0}--View Model's statistics, such as Confusion Matrix, Accuracy, F Measure, G, etc.{0}--Show model's ROC Curve with AUC calculated value{0}Otherwise{0}--Exports the predictions of unlabelled projects into a .csv containing: 1) Their respective SQL Server project ID, 2) Their Probability of being approved, 3) Their Class (0/1){0}{0}*Ability to tweak Algorithm-Specific Options, such as: nTree, mTry, maxDepth, cp, lossFunction, Plot Variables Importance, Out-of-bags Error VS nTree Plot
Opens the StochasticDualCoordinateAscent form where you may:{0}*Train a Stochastic Dual Coordinate Ascent model using R's rxFastLinear algorithm{0}*Make prediction on the Testing File{0}*Save the trained model in a file using R's RDS format which can then be used to import the trained model into this programme or to an R client{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}{0}[Enable/Disable Statistics Mode]{0}If the dataset is created using Statistics Mode (i.e. n% of labelled data for Training and 100-n% for Testing:{0}--View Model's statistics, such as Confusion Matrix, Accuracy, F Measure, G, etc.{0}--Show model's ROC Curve with AUC calculated value{0}Otherwise{0}--Exports the predictions of unlabelled projects into a .csv containing: 1) Their respective SQL Server project ID, 2) Their Probability of being approved, 3) Their Class (0/1){0}{0}*Ability to tweak Algorithm-Specific Options, such as: type, normalize, convergenceTolerance
Opens the BoostedDecisionTrees form where you may:{0}*Train a Boosted Decision Trees model using R's rxFastTrees algorithm{0}*Make prediction on the Testing File{0}*Save the trained model in a file using R's RDS format which can then be used to import the trained model into this programme or to an R client{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}{0}[Enable/Disable Statistics Mode]{0}If the dataset is created using Statistics Mode (i.e. n% of labelled data for Training and 100-n% for Testing:{0}--View Model's statistics, such as Confusion Matrix, Accuracy, F Measure, G, etc.{0}--Show model's ROC Curve with AUC calculated value{0}Otherwise{0}--Exports the predictions of unlabelled projects into a .csv containing: 1) Their respective SQL Server project ID, 2) Their Probability of being approved, 3) Their Class (0/1){0}{0}*Ability to tweak Algorithm-Specific Options, such as: unbalancedSets, numTrees, numLeaves, gainConfLevel
Opens the EnsambleofDecisionTrees form where you may:{0}*Train a Ensemble of Decision Trees model using R's rxFastForest algorithm{0}*Make prediction on the Testing File{0}*Save the trained model in a file using R's RDS format which can then be used to import the trained model into this programme or to an R client{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}{0}[Enable/Disable Statistics Mode]{0}If the dataset is created using Statistics Mode (i.e. n% of labelled data for Training and 100-n% for Testing:{0}--View Model's statistics, such as Confusion Matrix, Accuracy, F Measure, G, etc.{0}--Show model's ROC Curve with AUC calculated value{0}Otherwise{0}--Exports the predictions of unlabelled projects into a .csv containing: 1) Their respective SQL Server project ID, 2) Their Probability of being approved, 3) Their Class (0/1){0}{0}*Ability to tweak Algorithm-Specific Options, such as: type, numTrees, numLeaves, gainConfLevel
Opens the NeuralNetworks form where you may:{0}*Train a Neural Networks model using R's rxNeuralNet algorithm{0}*Make prediction on the Testing File{0}*Save the trained model in a file using R's RDS format which can then be used to import the trained model into this programme or to an R client{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}{0}[Enable/Disable Statistics Mode]{0}If the dataset is created using Statistics Mode (i.e. n% of labelled data for Training and 100-n% for Testing:{0}--View Model's statistics, such as Confusion Matrix, Accuracy, F Measure, G, etc.{0}--Show model's ROC Curve with AUC calculated value{0}Otherwise{0}--Exports the predictions of unlabelled projects into a .csv containing: 1) Their respective SQL Server project ID, 2) Their Probability of being approved, 3) Their Class (0/1){0}{0}*Ability to tweak Algorithm-Specific Options, such as: numHiddenNodes, numIterations, acceleration, normalize
Opens the Fast Logistic Regression form where you may:{0}*Train a Fast Logistic Regression model using R's rxLogisticRegression algorithm{0}*Make prediction on the Testing File{0}*Save the trained model in a file using R's RDS format which can then be used to import the trained model into this programme or to an R client{0}*View a Data Summary of the dataset, such as Min, Max, Mean, etc.{0}*View Variable Information such as their types and descriptions.{0}{0}[Enable/Disable Statistics Mode]{0}If the dataset is created using Statistics Mode (i.e. n% of labelled data for Training and 100-n% for Testing:{0}--View Model's statistics, such as Confusion Matrix, Accuracy, F Measure, G, etc.{0}--Show model's ROC Curve with AUC calculated value{0}Otherwise{0}--Exports the predictions of unlabelled projects into a .csv containing: 1) Their respective SQL Server project ID, 2) Their Probability of being approved, 3) Their Class (0/1){0}{0}*Ability to tweak Algorithm-Specific Options, such as: sgdInitTol, l2Weight, l1Weight, optTol, memorySize, initWtsScale, maxIterations
